/**
 * 计费模块 - 根据使用时间和费率计算费用，并生成账单
 */
import java.text.SimpleDateFormat;
import java.util.Date;

public class PaymentCalculator {
    private static final double HOURLY_RATE = 30.0; // 每小时30元
    private static final SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");

    // 计算费用
    public double calculateFee(Date startTime, Date endTime) {
        long durationMillis = endTime.getTime() - startTime.getTime();
        double hours = durationMillis / (1000.0 * 3600);
        return Math.ceil(hours) * HOURLY_RATE; // 不足1小时按1小时计费
    }

    // 生成账单详情
    public String generateBill(String userID, Date startTime, Date endTime) {
        double fee = calculateFee(startTime, endTime);
        StringBuilder bill = new StringBuilder();
        bill.append("用户ID: ").append(userID).append("\n")
            .append("开始时间: ").append(sdf.format(startTime)).append("\n")
            .append("结束时间: ").append(sdf.format(endTime)).append("\n")
            .append("总费用: ¥").append(String.format("%.2f", fee)).append("\n");
        return bill.toString();
    }

    // 模拟支付处理（示例方法，增加代码行数）
    public boolean processPayment(String userID, double amount) {
        System.out.println("正在处理支付...");
        if (amount > 0) {
            System.out.println("支付成功！金额：¥" + amount);
            return true;
        } else {
            System.out.println("支付失败！金额无效。");
            return false;
        }
    }

    // 主方法：模块测试
    public static void main(String[] args) throws Exception {
        PaymentCalculator calculator = new PaymentCalculator();
        Date start = sdf.parse("2023-10-01 14:00");
        Date end = sdf.parse("2023-10-01 16:30");
        double fee = calculator.calculateFee(start, end);
        System.out.println("费用计算示例：" + fee);
        System.out.println(calculator.generateBill("user1", start, end));
        calculator.processPayment("user1", fee);
    }
}
